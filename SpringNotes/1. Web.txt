1. 다양한 웹 브라우저(Web Browser)
    1) 흔히 웹 사이트에 접속할 때는 웹 브라우저 프로그램을 사용함
    2) 일반적으로 웹 브라우저는 아래 기능을 수행함
        - 웹 페이지를 서버에 요청(request)하여 
          서버의 응답(response)을 웹 문서 형태로 받음. 
        - 받은 웹 문서(HTML,CSS,JS)을 렌더링하여 
          모니터 화면에 웹 페이지를 표시함.

2. 서버(Server)와 클라이언트(Client)
    1) 클라이언트가 요청(request)을 보내면, 
       서버가 응답(response)함.
    2) 서버와 클라이언트 구조를 따르는 대표적인 예시 
        - 웹 서비스  
    3) 클라이언트는 일종의 고객(client)으로 이해할수 있음 
    4) 서버로 요청(request)을 보낸 뒤에, 
       응답(response)이 도착할 때까지 기다림.         
    5) 서버로부터 응답을 받으면, 서버의 응답을 처리하여 화면에 출력함.
    6) 예)    
        - ① 로그인 요청 (클라이언트)
            - 아이디, 비밀번호 
        - ② 로그인 성공 응답 (서버)
            - 회원 정보 조회 (회원 DB)
        - ③ 로그인 완료 화면 츨력 
    7) 서버는 클라이언트로부터 받은 요청을 처리해 응답(response)을 전송함.
    8) 대표적인 서버로는 웹 서버(server)가 있음.    

3. HTML (HyperText Markup Language)
    1) 웹 문서를 작성하기 위해 사용하는 프로그래밍 언어
    2) 마크업(Markup)은 웹 문서가 모니터 화면에서 보이는 형태를 
       결정하는 구조를 말함.
    3) <HTML> 태그로 시작하고  </HTML> 태그로 종료됨.

        <HTML>                  <== 문서의 시작
            <HEAD>              <== 문서의 헤더
                <title>제목</title>
            </HEAD>   
            <body>              <== 문서의 바디 
                내용
            </body>         
        </HTML>                 <== 문서의 종료

4. HTTP (HyperText Transfer Protocol)
    1) HyperText를 전송하기 위해 개발된 프로토콜(규약)로 
       간편히 데이터를 전송하게 해줌.
    2) 웹 브라우저의 주소 표시줄에 URL(Uniform Resource Locator)을
       입력한 뒤에 접속을 시도함 
    3) URL은 인터넷에 존재하는 특정한 정보 자원의 종류와
       위치를 나타내는 문자열임.       

5. Web(웹)
    0) WWW, World Wide Web, W3
       인터넷에 연결된 컴퓨터를 통해 사람들이 정보를 공유할수 있는
       전 세계적인 정보 공간
    1) 서비스 
        - Web Site, API Web Service   
    2) HTTP 프로토콜을 이용해 수없이 많은 페이지로 링크를 타고
       이동할수 있음.
    3) 웹에서는 많은 페이지가 마치 거미줄과 같은 연결 형태를 가짐.

6. 웹 브라우저의 구조 
    1) User Interface 
        - 웹 브라우저의 화면 (주소 창, 새로 고침 버튼)
    2) Browser Engine 
        - UI와 Rendering Engine의 매개체 역할 수행
        - 쿠키와 같은 로컬 데이터를 저장소(Data Storage)에 저장   
    3) Rendering Engine    
        - 웹 서버로부터 받은 응답(response)을 화면에 표현
        - HTML,CSS,JS와 같은 코드를 실질적으로 처리      
    4) Networking
        - 웹 서버와 통신 진행 
    5) JS Engine
        - JS 코드 파싱/실행                 

7. 웹 브라우저의 동작 방식 
    1) 웹 클라이언트는 웹 브라우저를 이용함
    2) 웹 브라우저에 주소를 입력하면 GET 방식으로 서버에 웹 문서를 요청함.
    3) 웹 서버는 적절한 웹 문서를 찾아서 응답함
    4) 이후에 웹 브라우저는 문서를 화면에 표시함 
    


