1. 다양한 웹 브라우저(Web Browser)
    1) 웹 사이트에 접속할 때 웹 브라우저 프로그램을 사용함
    2) 웹 브라우저의 기능 
        - 웹 페이지를 서버에 요청(request)
        - 서버의 응답(response)을 웹 문서 형태로 받음
        - 받은 웹 문서(HTML, CSS, JS)를 렌더링해서 화면에 웹 페이지를 표시함

2. 서버(Server)와 클라이언트(Client)
    1) 클라이언트가 요청(request) 
    2) 서버가 응답(response)
    3) 서버와 클라이언트 구조를 따르는 대표적인 예시
        - 웹 서비스
    4) 서버로 요청을 보낸 뒤 응답이 도착할 때까지 기다림
    5) 서버로부터 응답을 받으면, 서버의 응답을 처리하여 화면에 출력함
        예) 로그인 요청
            ① 아이디, 비밀번호(클라이언트)
            ② 로그인 성공 응답(서버)
                - 회원정보 조회 (회원 DB)
            ③ 로그인 완료 화면 출력
    6) 대표적인 서버로는 웹 서버(server)가 있다.
    
3. HTML (HyperText Markup Language)
    1) 웹 문서를 작성하기 위해 사용하는 프로그래밍 언어
    2) 마크업(Markup)은 웹 문서가 모니터 화면에서 보이는 형태를 결정하는 구조를 말함
    3) <HTML> 태그로 시작하고 </HTML> 태그로 종료됨
        - 예)
                <HTML>
                    <HEAD>
                        <TITLE>페이지 제목</TITLE>
                    </HEAD>
                    <BODY>
                        페이지 내용
                    </BODY>
                </HTML>

4. HTTP (HyperText Transfer Protocol)
    1) HyperText를 전송하기 위해 개발된 프로토콜로 간편히 데이터를 전송하게 해줌
    2) 웹 브라우저의 주소 표시줄에 URL(Uniform Resource Locator)을 입력한 뒤에 접속을 시도함
    
5. Web(웹)
    1) HTTP 프로토콜을 이용해 수없이 많은 페이지로 링크를 타고 이동할 수 있음
    2) 웹에서는 많은 페이지가 거미줄처럼 연결되어 있음

6. 웹 브라우저의 구조
    1) UI(User Interface)
        - 웹 브라우저의 화면 (주소 창, 새로 고침 버튼)
    2) Browser Engine 
        - UI와 Rendering Engine의 매개체 역할 수행
        - 쿠키와 같은 로컬 데이터를 저장소(Data Storage)에 저장
        
7. 웹 브라우저의 동작 방식
    1) 웹 클라이언트는 웹 브라우저를 이용함
    2) 웹 브라우저에 주소를 입력하면 GET 방식으로 서버에 웹 문서를 요청함.
    3) 웹 서버는 적절한 웹 문서를 찾아서 응답함
    4) 응답한 것을 브라우저가 렌더링(화면에 출력)을 한다.



















