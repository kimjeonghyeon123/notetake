0. JOIN이 필요한 이유 
    1) 필요한 정보(상품명, 유저 정보, 카테고리 정보 등)가
       각기 다른 테이블에 분산 저장되어 있음.
       => 이를 하나의 테이블로 가져와 보기좋게 데이터를 추출하기 위함.

1. 조인 
    1) 서로 다른 테이블을 공통 컬럼을 기준으로 합치는(결합하는)
       테이블 단위 연산 
        - 여러 테이블에 대한 조인 검색
        - 조인 속성
            - 조인 검색을 위해 테이블을 연결해주는 속성(컬럼)
    2) 두 개 이상의 테이블을 연결 또는 결합하여 데이터를 출력하는 것.
    3) 일반적으로 사용되는 SQL문의 상당수가 조인으로 이루어져 있음.
    4) 일반적인 경우 PK와 FK의 값 연관에 의해 조인이 이루어지며
       PK,FK 관계와 별도로 일반 컬럼 끼리 조인이 이루어지는 경우도 있음.
    5) ANSI 표준 방식  
        - SELECT * 
          FROM 테이블1 AS A (INNER) JOIN 테이블2 AS B
          ON A.KEY = B.KEY
          ;
        - SELECT * 
          FROM 테이블1, 테이블2   
          WHERE 테이블1.컬럼명 = 테이블2.컬럼명 
          ; 


        - SELECT *
          FROM 테이블1 
          JOIN 테이블2 
          ON 테이블1.컬럼명 = 테이블2.컬럼명    
          JOIN 테이블3
          ON 테이블2.컬럼명 = 테이블3.컬럼명 
          ;

        - SELECT * 
          FROM 테이블1, 테이블2, 테이블3 
          WHERE 테이블1.컬럼명 = 테이블2.컬럼명 
          AND 테이블2.컬러명 = 테이블3.컬럼명
          ;          

        - 조인 시 서로 다른 테이블에 같은 컬럼명이 존재하면 
          구분을 위해 테이블명.컬럼명으로 사용해서 표시. 
        - 연결하려는 테이블 간에 조인 속성(컬럼)명은 달라도 되지만
          도메인은 같아야 함.
        - 일반적으로 외래키(FK)를 조인 속성으로 이용함
                      


2. INNER JOIN (내부조인)
  1) 두 집합 간의 교집합을 리턴하는 조인 연산 방식임 
    - 두개 테이블에 모두 존재하는 행만 남음 
    - 조인시 NULL값을 허용하지 않음 
    - NULL값을 가진 레코드는 조인 결과에 빠짐 
  2) 조건에 따라 여러개의 테이블 조인 가능 
  3) 필요상황
    - 두개 테이블에 조인 키가 빠짐없이 있을 때.

3. OUTER JOIN (외부조인)
  1) 조인 시 NULL값을 허용하는 조인 
  2) 종류 
    - LEFT OUTER JOIN 
      - 두 집합에서 LEFT쪽 집합은 모두 출력하고 
        RIGHT쪽 집합 매칭되는것만 출력하는 조인 연산 방식임.
      - 왼쪽에 있는 집합과 두 집합간의 교집합을 리턴하는 조인 연산 방식임.

    - RIGHT OUTER JOIN 
      - 두 집합에서 RIGHT쪽 집합은 모두 출력하고 
        RIGHT쪽 집합 매칭되는것만 출력하는 조인 연산 방식임.
      - 오른쪽에 있는 집합과 두 집합간의 교집합을 리턴하는 조인 연산 방식임.  

    - FULL OUTER JOIN 
      - 왼쪽 테이블 집합, 오른족 테이블 집합을 모두 리턴함(출력함)   
      - INNER JOIN의 결과 집합 + LEFT OUTER JOIN의 결과 집합 + 
        RIGHT OUTER JOIN의 결과 집합 모두가 출력됨     

4. SELF JOIN 
  1) 동일한 테이블 끼리 조인하는 것을 의미함 
  2) 
      SELECT *
      FROM 테이블1 AS A 
      JOIN 테이블1 AS B 
      ON A.NAME = B.MANAGER
      ;

5. CROSS JOIN 
  1) 아무런 조인조건이 없는 조인임.
  2) 두개의 집합간의 곱집합을 리턴함.
  3) 
      SELECT * 
      FROM 테이블1 AS A 
      CROSS JOIN 테이블2 B         
      ;