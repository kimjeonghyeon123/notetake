0. SQL 
    1) SEQUEL (Structure English QUEry Language)
        - 1974년 IBM에서 연구용 DBMS인 SYSTEM R을 위한 언어로 개발됨
    2) ANSI/ISO가 표준 standard SQL를 지원함 
        - SQL (Structured Query Language)
        - SQL-86, SQL-92, SQL-99,....    

1. SELECT 문 
    1) 테이블에서 데이터를 조회할 수 있음 
    2) 조회 혹은 출력하고자 하는 컬럼 혹은 표현식을 기재함 
    3) SELECT 컬럼명 FROM 테이블명 WHERE 조건절;
    4) 컬럼간 문자열 결합 (연결) 
        - || (합성 연산자)       

    5)  SELECT      * |[DISTINCT] <column_name>[AS 별칭], .... (3)
        FROM        테이블 이름(들) [AS 테이블이름 별칭]         (1)  
        [WHERE      검색조건(들)]                               (2)

        [ORDER BY   속성이름[ASC|DESC]]                        (4) 


        - ALL : 튜플의 중복을 허용하도록 지정
        - DISTINCT : 튜플의 중복을 허용하지 않도록 지정
            - 중복을 제거한 유일 집합을 추출 

        - 앨리어스
            - 테이블 및 컬럼(표현식)에 대한 이름(별칭) 지정
            - AS 키워드를 이용
            - AS 키워드 생략 가능 
            - 결과 테이블에서 속성의 이름을 바꾸어 출력 가능             
            - 공백이 있을 경우 ""로 감쌈 
            - 앨리어스명으로 한글로 줄수도 있음 

        - ORDER BY절 
            - SELECT문의 결과집합을 SELECT절에 기재한 컬럼 기준 혹은
              으로 표현식을 기준으로 정렬할수 있음.    
            - 오름차순(ASC) 정렬    
            - 1개 컬럼 - ASC 정렬          
            - 2개 컬럼 - DESC 정렬, ASC 정렬
            - 컬럼 앨리어스를 기재하여 정렬
            - SELECT절 컬럼 기재 순서(순번)를 기재하여 정렬 

        - WHERE절
            - 조건을 주어 특정 조건에 부합하는 결과집합(행)만을 추출.
                - () 괄호
                - 논리연산자 (AND,OR,NOT)
                    - 논리 조건 적용할수 있는 연산자 
                - <> 연산자 (부정연산자)   
                - 비교 연산자 
                - SQL 연산자 
                    - BETWEEN A AND B 
                    - IN ()       
                    - LIKE '비교문자열'   
                    - IS NULL                 

        - LIMIT 절 
            - SELECT문에서 반환되는 결과집합의 행의 건수를 제한함
            - LIMIT ~ OFFSET 사용 
                - OFFSET : 출력하는 시작 행 (0부터 시작함)    

        - FETCH 절 
            - SELECT문에서 반환되는 결과집합의 행의 건수를 제한함 

        - LIMIT VS FETCH
            - 기능적으로 동일함
            - LIMIT은 SQL 국제 표준은 아님

        - IN 연산자 
            - 특정 목록과 일치하는 값이 있으면 결과집합을 리턴함   
            - IN 연산자와 OR 연산은 결과집합이 동일함   
            - NOT IN 연산자         

        - BETWEEN 연산자 
            - 값에 범위에 대한 조건에 부합하는 결과집합(행)을 리턴함             

        - LIKE 연산자 
            - 특정 패턴과 일치하는 조건으로 데이터를 조회 가능 
            - 와일드 카드인 %, _ 와 함께 사용 
                - %
                    - 와일드 카드 % 앞/뒤 사용
                    - 무엇이 나오던지 나오지 않던지 상관이 없다는 뜻임.
                    - 예) %Jen%
                - _ (언더바)
                    - 무엇이든지 간에 한자리의 문자를 의미함.
                    - 예) Jen___%
                            - Jen으로 시작하면서 총6자리 이상인 모든 행을 리턴함.     
                          ___(3개)
                            - 무엇이든지 간에 3자리만 딱 있으면 리턴함 

        - NULL 비교 
            - IS NULL, IS NOT NULL 
            - NULL 인지 아닌지 판단하는 연산자   

        - CASE문 
            - IF문과 같은 분기처리에 의한 SQL문 작성 가능 
            - CASE WHEN 조건 THEN 값 혹은 SQL 문
                   WHEN 조건 THEN 값 혹은 SQL 문 
                   WHEN 조건 THEN 값 혹은 SQL 문  
                   ELSE 값 혹은 SQL 문  
              END                    

        - CAST 연산자 
            - 데이터 타입(유형)을 변환 
                - 문자열을 정수형으로 형변환 
                - 문자열을 날짜형으로 형변환 
                - 문자열을 실수형으로 형변환 
                - 문자열을 INTERVAL형으로 형변환 
    

    6) 날짜 관련 함수 
        - age()
        - 현재 시간 정보 조회 
        - 일자 및 시간 추출 함수 
        - 문자열을 일자 및 시간형으로 형변환하는 함수 

    7) 문자열 관련 함수 
    8) 수학 관련 함수 
